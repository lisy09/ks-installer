---
apiVersion: batch/v1
kind: Job
metadata:
  name: notification-db-init-job
  namespace: kubesphere-alerting-system
  labels:
    app: notification
    job: notification-db-init
    version: v0.1.0
spec:
  backoffLimit: 6
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: notification
        job: notification-db-init
        version: v0.1.0
      name: notification-db-init
    spec:
      initContainers:
      - name: wait-mysql
        image: {{ busybox_repo }}:{{ busybox_tag }}
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z {{ dbHost }} {{ dbPort }}; do echo "waiting for mysql"; sleep 2; done;']
      affinity:
        nodeAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - command: ["/flyway/sql/ddl/ddl_init.sh", "-h{{ dbHost }}", "-uroot", "--connect-timeout=5"]
        env:
        - name: PASSWORD
          value: "password"
        image: {{ notification_flyway_repo }}:{{ notification_flyway_tag }}
        imagePullPolicy: IfNotPresent
        name: notification-db-init
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
